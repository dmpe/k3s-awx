prometheus-adapter:
  enabled: false

rancherMonitoring:
  enabled: true

defaultRules:
  create: false

global:
  cattle:
    systemDefaultRegistry: ""
  rbac:
    pspEnabled: false

alertmanager:
  enabled: false

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
##
grafana:
  enabled: false

  ## ForceDeployDatasources Create datasource configmap even if grafana deployment has been disabled
  ##
  forceDeployDatasources: true

  ## ForceDeployDashboard Create dashboard configmap even if grafana deployment has been disabled
  ##
  forceDeployDashboards: true

  ## Deploy default dashboards
  ##
  defaultDashboardsEnabled: true

  # Additional options for defaultDashboards
  defaultDashboards:
    # The default namespace to place defaultDashboards within
    namespace: default
    # Whether to create the default namespace as a Helm managed namespace or use an existing namespace
    # If false, the defaultDashboards.namespace will be created as a Helm managed namespace
    useExistingNamespace: false
    # Whether the Helm managed namespace created by this chart should be left behind on a Helm uninstall
    # If you place other dashboards in this namespace, then they will be deleted on a helm uninstall
    # Ignore if useExistingNamespace is true
    cleanupOnUninstall: false

  ingress:
    enabled: false

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      searchNamespace: default
      annotations: {}
      multicluster:
        global:
          enabled: true
        etcd:
          enabled: true
      provider:
        allowUiUpdates: true
    datasources:
      enabled: true
      defaultDatasourceEnabled: true

      ## URL of prometheus datasource
      ##
      url: http://prometheus-stack-prometheus:9090/

      # If not defined, will use prometheus.prometheusSpec.scrapeInterval or its default
      defaultDatasourceScrapeInterval: 15s

      ## Annotations for Grafana datasource configmaps
      ##
      annotations: {}

      ## Create datasource for each Pod of Prometheus StatefulSet;
      ## this uses headless service `prometheus-operated` which is
      ## created by Prometheus Operator
      ## ref: https://git.io/fjaBS
      createPrometheusReplicasDatasources: false
      label: grafana_datasource

  extraConfigmapMounts: []
  # - name: certs-configmap
  #   mountPath: /etc/grafana/ssl/
  #   configMap: certs-configmap
  #   readOnly: true

  extraContainers: []

  ## Volumes that can be used in containers
  extraContainerVolumes:
    - name: nginx-home
      emptyDir: {}

  serviceMonitor:
    selfMonitor: false

## Component scraping the kube api server
##
kubeApiServer:
  enabled: false

## Component scraping the kubelet and kubelet-hosted cAdvisor
##
kubelet:
  enabled: false


## Component scraping coreDns. Use either this or kubeDns
##
coreDns:
  enabled: false

## Component scraping kube state metrics
##
kubeStateMetrics:
  enabled: false

## Configuration for kube-state-metrics subchart
##
kube-state-metrics:
  namespaceOverride: ""
  rbac:
    create: true
  podSecurityPolicy:
    enabled: false


## Deploy node exporter as a daemonset to all nodes
##
nodeExporter:
  enabled: false

## Configuration for prometheus-node-exporter subchart
##
prometheus-node-exporter:
  namespaceOverride: ""
  podLabels:
    ## Add the 'node-exporter' label to be used by serviceMonitor to match standard common usage in rules and grafana dashboards
    ##
    jobLabel: node-exporter
  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  service:
    port: 9796
    targetPort: 9796
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi

## Manages Prometheus and Alertmanager components
prometheusOperator:
  enabled: false

prometheus:
  enabled: false

